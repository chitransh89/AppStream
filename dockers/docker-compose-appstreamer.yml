version: '2.3'

services:

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: "zookeeper"
    networks:
      - appStream
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
        - ./zookeeper_data:/bitnami/zookeeper

  kafka:
    image: 'docker.io/bitnami/kafka:3'
    networks:
      - appStream
    ports:
      - "9092:9092"
      - "29092:29092"
    container_name: "kafka"
    volumes:
      - ./kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092

  model-consumer:
    image: 'appstream:0.1'
    command: python main.py
    container_name: model
    networks:
      - appStream
    depends_on:
      - kafka
    environment:
      - KAFKA_HOST=kafka:9092
      - KAFKA_TOPIC=image-stream
      - KAFKA_MIN_COMMIT_COUNT=5
      - CONSUMER_TYPE=kafka

volumes:
  zookeeper:
    driver: local
  kafka:
    driver: local

networks:
  appStream:
    driver: bridge